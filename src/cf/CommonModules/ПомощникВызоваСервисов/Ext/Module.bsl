Функция СтруктураURI(Знач СтрокаURI) Экспорт
	
	СтрокаURI = СокрЛП(СтрокаURI);
	
	// схема
	Схема = "";
	Позиция = Найти(СтрокаURI, "://");
	Если Позиция > 0 Тогда
		Схема = НРег(Лев(СтрокаURI, Позиция - 1));
		СтрокаURI = Сред(СтрокаURI, Позиция + 3);
	КонецЕсли;

	// строка соединения и путь на сервере
	СтрокаСоединения = СтрокаURI;
	ПутьНаСервере = "";
	Позиция = Найти(СтрокаСоединения, "/");
	Если Позиция > 0 Тогда
		ПутьНаСервере = Сред(СтрокаСоединения, Позиция + 1);
		СтрокаСоединения = Лев(СтрокаСоединения, Позиция - 1);
	КонецЕсли;
		
	// информация пользователя и имя сервера
	СтрокаАвторизации = "";
	ИмяСервера = СтрокаСоединения;
	Позиция = Найти(СтрокаСоединения, "@");
	Если Позиция > 0 Тогда
		СтрокаАвторизации = Лев(СтрокаСоединения, Позиция - 1);
		ИмяСервера = Сред(СтрокаСоединения, Позиция + 1);
	КонецЕсли;
	
	// логин и пароль
	Логин = СтрокаАвторизации;
	Пароль = "";
	Позиция = Найти(СтрокаАвторизации, ":");
	Если Позиция > 0 Тогда
		Логин = Лев(СтрокаАвторизации, Позиция - 1);
		Пароль = Сред(СтрокаАвторизации, Позиция + 1);
	КонецЕсли;
	
	// хост и порт
	Хост = ИмяСервера;
	Порт = "";
	Позиция = Найти(ИмяСервера, ":");
	Если Позиция > 0 Тогда
		Хост = Лев(ИмяСервера, Позиция - 1);
		Порт = Сред(ИмяСервера, Позиция + 1);
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("Схема", Схема);
	Результат.Вставить("Логин", Логин);
	Результат.Вставить("Пароль", Пароль);
	Результат.Вставить("ИмяСервера", ИмяСервера);
	Результат.Вставить("Хост", Хост);
	Результат.Вставить("Порт", ?(Порт <> "", Число(Порт), Неопределено));
	Результат.Вставить("ПутьНаСервере", ПутьНаСервере);
	
	Возврат Результат;
	
КонецФункции

Процедура ОбработатьОшибкиРезультатаВызова(Результат) Экспорт
// Анализируем фатальные ошибки
	 // В большинстве случаев нужно остановить работу и показать пользователю сообщение об ошибке,
	 // включив в него HTTP-статус
	 
	 // Ошибки 4XX говорят о неправильном запросе - в широком смысле
	 // Может быть неправильный адрес, ошибка аутентификации, плохой формат запроса
	 // Подробнее смотри http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.4
	 Если Результат.КодСостояния >= 400 и Результат.КодСостояния < 500  Тогда
	   	 ВызватьИсключение "Код статуса больше 4XX, ошибка запроса.  Код статуса: " + Результат.КодСостояния;
	 КонецЕсли;
	 
	 // Ошибки 5XX говорят о проблемах на сервере (возможно, прокси-сервер)
	 // Это может быть программная ошибка, нехватка памяти, ошибка конфигурации и т.д.
	 // Подробнее смотри http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html#sec10.5
	 Если Результат.КодСостояния >= 500 и Результат.КодСостояния < 600  Тогда
	   	 ВызватьИсключение "Код статуса больше 5XX, ошибка сервера. Код статуса: " + Результат.КодСостояния;
	 КонецЕсли;
	 
	 // Обрабатываем перенаправление
	 Если Результат.КодСостояния >= 300 и Результат.КодСостояния < 400  Тогда
		 ТекстОшибки = "Код статуса больше 3XX, Перенаправление. Код статуса: " + Результат.КодСостояния;
		 Если Результат.КодСостояния = 302 Тогда
			 
			 ТекстОшибки = ТекстОшибки + "
			 |Код статуса 302, Постоянное перенаправление.";
			 
			 АдресРесурса = Результат.Заголовки.Получить("Location");
			 Если АдресРесурса <> Неопределено Тогда
				 ТекстОшибки = ТекстОшибки + "
				 |Перенаправление идет по новому адресу " + АдресРесурса;
				  
			 Иначе
				 ТекстОшибки = ТекстОшибки + "
				 |Сервер не сообщил адрес ресурса!";
			 КонецЕсли;
		 ИначеЕсли Результат.КодСостояния = 301 Тогда
			 
			 ТекстОшибки = ТекстОшибки + "
			 |Код статуса 301, временное перенаправление.";
			 
			 АдресРесурса = Результат.Заголовки.Получить("Location");
			 Если АдресРесурса <> Неопределено Тогда
				 ТекстОшибки = ТекстОшибки + "
				 |Перенаправление идет по новому адресу 
				 |" + АдресРесурса;
				  
			 Иначе
				 ТекстОшибки = ТекстОшибки + "
				 |Сервер не сообщил адрес ресурса!";
			 КонецЕсли;

			 
		 КонецЕсли;
		 
		 ВызватьИсключение ТекстОшибки;
	 КонецЕсли;
	 
 КонецПроцедуры
 	 